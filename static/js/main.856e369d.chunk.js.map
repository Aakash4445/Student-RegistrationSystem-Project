{"version":3,"sources":["components/ErrorMessage.js","components/CourseTypeManager.js","components/CourseManager.js","components/CourseOfferingManager.js","components/StudentRegistrationManager.js","App.js","index.js"],"names":["ErrorMessage","_ref","message","React","createElement","style","color","fontSize","CourseTypeManager","courseTypes","setCourseTypes","useState","newCourseType","setNewCourseType","error","setError","type","value","onChange","e","target","placeholder","onClick","addCourseType","trim","includes","map","index","key","filter","t","CourseManager","courses","setCourses","newCourse","setNewCourse","addCourse","alert","course","c","deleteCourse","CourseOfferingManager","offerings","setOfferings","setCourse","setType","addOffering","newOffering","concat","offering","o","deleteOffering","StudentRegistrationManager","registrations","setRegistrations","studentName","setStudentName","courseOffering","setCourseOffering","registerStudent","reg","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.856e369d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  if (!message) return null;\r\n\r\n  return <p style={{ color: \"red\", fontSize: \"0.9rem\" }}>{message}</p>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState } from \"react\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst CourseTypeManager = () => {\r\n  const [courseTypes, setCourseTypes] = useState([]);\r\n  const [newCourseType, setNewCourseType] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const addCourseType = () => {\r\n    if (newCourseType.trim() === \"\") {\r\n      setError(\"Course type cannot be empty.\");\r\n      return;\r\n    }\r\n    if (courseTypes.includes(newCourseType)) {\r\n      setError(\"Course type already exists.\");\r\n      return;\r\n    }\r\n\r\n    setCourseTypes([...courseTypes, newCourseType]);\r\n    setNewCourseType(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Course Types</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newCourseType}\r\n        onChange={(e) => setNewCourseType(e.target.value)}\r\n        placeholder=\"Enter course type\"\r\n      />\r\n      <button onClick={addCourseType}>Add</button>\r\n      <ErrorMessage message={error} />\r\n      <ul>\r\n        {courseTypes.map((type, index) => (\r\n          <li key={index}>\r\n            {type} <button onClick={() => setCourseTypes(courseTypes.filter((t) => t !== type))}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseTypeManager;\r\n","import React, { useState } from \"react\";\r\n\r\nconst CourseManager = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [newCourse, setNewCourse] = useState(\"\");\r\n\r\n  const addCourse = () => {\r\n    if (newCourse.trim() === \"\" || courses.includes(newCourse)) {\r\n      alert(\"Invalid or duplicate course\");\r\n      return;\r\n    }\r\n    setCourses([...courses, newCourse]);\r\n    setNewCourse(\"\");\r\n  };\r\n\r\n  const deleteCourse = (course) => {\r\n    setCourses(courses.filter((c) => c !== course));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Courses</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newCourse}\r\n        onChange={(e) => setNewCourse(e.target.value)}\r\n        placeholder=\"Enter course\"\r\n      />\r\n      <button onClick={addCourse}>Add</button>\r\n      <ul>\r\n        {courses.map((course, index) => (\r\n          <li key={index}>\r\n            {course} <button onClick={() => deleteCourse(course)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseManager;\r\n","import React, { useState } from \"react\";\r\n\r\nconst CourseOfferingManager = () => {\r\n  const [offerings, setOfferings] = useState([]);\r\n  const [course, setCourse] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const addOffering = () => {\r\n    if (course === \"\" || type === \"\") {\r\n      alert(\"Select both course and type\");\r\n      return;\r\n    }\r\n    const newOffering = `${type} - ${course}`;\r\n    setOfferings([...offerings, newOffering]);\r\n  };\r\n\r\n  const deleteOffering = (offering) => {\r\n    setOfferings(offerings.filter((o) => o !== offering));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Course Offerings</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Course\"\r\n        value={course}\r\n        onChange={(e) => setCourse(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type\"\r\n        value={type}\r\n        onChange={(e) => setType(e.target.value)}\r\n      />\r\n      <button onClick={addOffering}>Add Offering</button>\r\n      <ul>\r\n        {offerings.map((offering, index) => (\r\n          <li key={index}>\r\n            {offering} <button onClick={() => deleteOffering(offering)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseOfferingManager;\r\n","import React, { useState } from \"react\";\r\n\r\nconst StudentRegistrationManager = () => {\r\n  const [registrations, setRegistrations] = useState([]);\r\n  const [studentName, setStudentName] = useState(\"\");\r\n  const [courseOffering, setCourseOffering] = useState(\"\");\r\n\r\n  const registerStudent = () => {\r\n    if (studentName === \"\" || courseOffering === \"\") {\r\n      alert(\"Enter both student name and course offering\");\r\n      return;\r\n    }\r\n    setRegistrations([...registrations, { studentName, courseOffering }]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Student Registrations</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Student Name\"\r\n        value={studentName}\r\n        onChange={(e) => setStudentName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Course Offering\"\r\n        value={courseOffering}\r\n        onChange={(e) => setCourseOffering(e.target.value)}\r\n      />\r\n      <button onClick={registerStudent}>Register</button>\r\n      <ul>\r\n        {registrations.map((reg, index) => (\r\n          <li key={index}>\r\n            {reg.studentName} registered for {reg.courseOffering}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentRegistrationManager;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CourseTypeManager from \"./components/CourseTypeManager\";\nimport CourseManager from \"./components/CourseManager\";\nimport CourseOfferingManager from \"./components/CourseOfferingManager\";\nimport StudentRegistrationManager from \"./components/StudentRegistrationManager\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Student Registration System</h1>\n      <CourseTypeManager />\n      <CourseManager />\n      <CourseOfferingManager />\n      <StudentRegistrationManager />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}